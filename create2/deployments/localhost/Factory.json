{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "boxes",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_salt",
          "type": "bytes32"
        }
      ],
      "name": "deploy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getBoxAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x8b949c3771f34efc4180012785ef0005f28bb2a630270090d057fa06421b5040",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "708555",
    "logsBloom": "0x
    "blockHash": "0x3460d6c178879b67aaad0aff575780489d39918ca5ef29bc5da8525c0452510b",
    "transactionHash": "0x8b949c3771f34efc4180012785ef0005f28bb2a630270090d057fa06421b5040",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "708555",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "bd968f5b155ec5626a2d3c8253f2c1f8",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"boxes\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"}],\"name\":\"deploy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getBoxAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Factory.sol\":\"Factory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Box.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract Box is Ownable {\\n    uint256 private value;\\n\\n    // Emitted when the stored value changes\\n    event ValueChanged(uint256 newValue);\\n\\n    constructor(uint256 _value) {\\n        value = _value;\\n    }\\n\\n    // Stores a new value in the contract\\n    function store(uint256 newValue) public onlyOwner {\\n        value = newValue;\\n        emit ValueChanged(newValue);\\n    }\\n\\n    // Reads the last stored value\\n    function retrieve() public view returns (uint256) {\\n        return value;\\n    }\\n}\\n\",\"keccak256\":\"0x70ca8cfb7c3b34b6c25d7ff081f1f12ef059a1484c7b9f9f067bd0914d7e4f6f\",\"license\":\"MIT\"},\"contracts/Factory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.18;\\n\\nimport \\\"./Box.sol\\\";\\n\\ncontract Factory {\\n    address[] public boxes;\\n\\n    function deploy(uint256 _value, bytes32 _salt) external {\\n        Box newBox = new Box{salt: _salt}(_value);\\n        boxes.push(address(newBox));\\n    }\\n\\n    function transferOwnership() external {\\n        Box(boxes[0]).transferOwnership(msg.sender);\\n    }\\n\\n    function getBoxAddress(uint256 index) external view returns (address) {\\n        return boxes[index];\\n    }\\n}\\n\",\"keccak256\":\"0xd94198c337325b0bb1bed7c5f76be47fafe0374f084141eed52a6cd49fad303d\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610be4806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806302037724146100515780633b11297e1461006d5780634ed3faf21461009d578063880ad0af146100cd575b600080fd5b61006b6004803603810190610066919061032b565b6100d7565b005b6100876004803603810190610082919061036b565b61017c565b60405161009491906103d9565b60405180910390f35b6100b760048036038101906100b2919061036b565b6101c3565b6040516100c491906103d9565b60405180910390f35b6100d5610202565b005b600081836040516100e7906102ad565b6100f19190610403565b8190604051809103906000f5905080158015610111573d6000803e3d6000fd5b5090506000819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b60008082815481106101915761019061041e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600081815481106101d357600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080815481106102165761021561041e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f2fde38b336040518263ffffffff1660e01b815260040161027991906103d9565b600060405180830381600087803b15801561029357600080fd5b505af11580156102a7573d6000803e3d6000fd5b50505050565b6107618061044e83390190565b600080fd5b6000819050919050565b6102d2816102bf565b81146102dd57600080fd5b50565b6000813590506102ef816102c9565b92915050565b6000819050919050565b610308816102f5565b811461031357600080fd5b50565b600081359050610325816102ff565b92915050565b60008060408385031215610342576103416102ba565b5b6000610350858286016102e0565b925050602061036185828601610316565b9150509250929050565b600060208284031215610381576103806102ba565b5b600061038f848285016102e0565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103c382610398565b9050919050565b6103d3816103b8565b82525050565b60006020820190506103ee60008301846103ca565b92915050565b6103fd816102bf565b82525050565b600060208201905061041860008301846103f4565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfe608060405234801561001057600080fd5b5060405161076138038061076183398181016040528101906100329190610162565b61004e61004361005b60201b60201c565b61006360201b60201c565b806001819055505061018f565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b6000819050919050565b61013f8161012c565b811461014a57600080fd5b50565b60008151905061015c81610136565b92915050565b60006020828403121561017857610177610127565b5b60006101868482850161014d565b91505092915050565b6105c38061019e6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80632e64cec11461005c5780636057361d1461007a578063715018a6146100965780638da5cb5b146100a0578063f2fde38b146100be575b600080fd5b6100646100da565b6040516100719190610350565b60405180910390f35b610094600480360381019061008f919061039c565b6100e4565b005b61009e61012d565b005b6100a8610141565b6040516100b5919061040a565b60405180910390f35b6100d860048036038101906100d39190610451565b61016a565b005b6000600154905090565b6100ec6101ed565b806001819055507f93fe6d397c74fdf1402a8b72e47b68512f0510d7b98a4bc4cbdf6ac7108b3c59816040516101229190610350565b60405180910390a150565b6101356101ed565b61013f600061026b565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101726101ed565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d890610501565b60405180910390fd5b6101ea8161026b565b50565b6101f561032f565b73ffffffffffffffffffffffffffffffffffffffff16610213610141565b73ffffffffffffffffffffffffffffffffffffffff1614610269576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102609061056d565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000819050919050565b61034a81610337565b82525050565b60006020820190506103656000830184610341565b92915050565b600080fd5b61037981610337565b811461038457600080fd5b50565b60008135905061039681610370565b92915050565b6000602082840312156103b2576103b161036b565b5b60006103c084828501610387565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103f4826103c9565b9050919050565b610404816103e9565b82525050565b600060208201905061041f60008301846103fb565b92915050565b61042e816103e9565b811461043957600080fd5b50565b60008135905061044b81610425565b92915050565b6000602082840312156104675761046661036b565b5b60006104758482850161043c565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006104eb60268361047e565b91506104f68261048f565b604082019050919050565b6000602082019050818103600083015261051a816104de565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061055760208361047e565b915061056282610521565b602082019050919050565b600060208201905081810360008301526105868161054a565b905091905056fea264697066735822122078f96c11a0004e96e82ef1a70bc5b382104c9daf7606863fbcabd46e9b2b5e0264736f6c63430008120033a26469706673582212200db5f8341d15a2b14013a9fbf8afd3402e5ac464168bae5ece3cec9b6bff733b64736f6c63430008120033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806302037724146100515780633b11297e1461006d5780634ed3faf21461009d578063880ad0af146100cd575b600080fd5b61006b6004803603810190610066919061032b565b6100d7565b005b6100876004803603810190610082919061036b565b61017c565b60405161009491906103d9565b60405180910390f35b6100b760048036038101906100b2919061036b565b6101c3565b6040516100c491906103d9565b60405180910390f35b6100d5610202565b005b600081836040516100e7906102ad565b6100f19190610403565b8190604051809103906000f5905080158015610111573d6000803e3d6000fd5b5090506000819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b60008082815481106101915761019061041e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600081815481106101d357600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080815481106102165761021561041e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f2fde38b336040518263ffffffff1660e01b815260040161027991906103d9565b600060405180830381600087803b15801561029357600080fd5b505af11580156102a7573d6000803e3d6000fd5b50505050565b6107618061044e83390190565b600080fd5b6000819050919050565b6102d2816102bf565b81146102dd57600080fd5b50565b6000813590506102ef816102c9565b92915050565b6000819050919050565b610308816102f5565b811461031357600080fd5b50565b600081359050610325816102ff565b92915050565b60008060408385031215610342576103416102ba565b5b6000610350858286016102e0565b925050602061036185828601610316565b9150509250929050565b600060208284031215610381576103806102ba565b5b600061038f848285016102e0565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103c382610398565b9050919050565b6103d3816103b8565b82525050565b60006020820190506103ee60008301846103ca565b92915050565b6103fd816102bf565b82525050565b600060208201905061041860008301846103f4565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfe608060405234801561001057600080fd5b5060405161076138038061076183398181016040528101906100329190610162565b61004e61004361005b60201b60201c565b61006360201b60201c565b806001819055505061018f565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b6000819050919050565b61013f8161012c565b811461014a57600080fd5b50565b60008151905061015c81610136565b92915050565b60006020828403121561017857610177610127565b5b60006101868482850161014d565b91505092915050565b6105c38061019e6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80632e64cec11461005c5780636057361d1461007a578063715018a6146100965780638da5cb5b146100a0578063f2fde38b146100be575b600080fd5b6100646100da565b6040516100719190610350565b60405180910390f35b610094600480360381019061008f919061039c565b6100e4565b005b61009e61012d565b005b6100a8610141565b6040516100b5919061040a565b60405180910390f35b6100d860048036038101906100d39190610451565b61016a565b005b6000600154905090565b6100ec6101ed565b806001819055507f93fe6d397c74fdf1402a8b72e47b68512f0510d7b98a4bc4cbdf6ac7108b3c59816040516101229190610350565b60405180910390a150565b6101356101ed565b61013f600061026b565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101726101ed565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d890610501565b60405180910390fd5b6101ea8161026b565b50565b6101f561032f565b73ffffffffffffffffffffffffffffffffffffffff16610213610141565b73ffffffffffffffffffffffffffffffffffffffff1614610269576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102609061056d565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000819050919050565b61034a81610337565b82525050565b60006020820190506103656000830184610341565b92915050565b600080fd5b61037981610337565b811461038457600080fd5b50565b60008135905061039681610370565b92915050565b6000602082840312156103b2576103b161036b565b5b60006103c084828501610387565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103f4826103c9565b9050919050565b610404816103e9565b82525050565b600060208201905061041f60008301846103fb565b92915050565b61042e816103e9565b811461043957600080fd5b50565b60008135905061044b81610425565b92915050565b6000602082840312156104675761046661036b565b5b60006104758482850161043c565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006104eb60268361047e565b91506104f68261048f565b604082019050919050565b6000602082019050818103600083015261051a816104de565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061055760208361047e565b915061056282610521565b602082019050919050565b600060208201905081810360008301526105868161054a565b905091905056fea264697066735822122078f96c11a0004e96e82ef1a70bc5b382104c9daf7606863fbcabd46e9b2b5e0264736f6c63430008120033a26469706673582212200db5f8341d15a2b14013a9fbf8afd3402e5ac464168bae5ece3cec9b6bff733b64736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 186,
        "contract": "contracts/Factory.sol:Factory",
        "label": "boxes",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      }
    }
  }
}